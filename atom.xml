<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>残局</title>
  
  <subtitle>AK-47</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-12-30T07:55:03.069Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>东北某卑微大学生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/12/29/hello-world/"/>
    <id>http://example.com/2021/12/29/hello-world/</id>
    <published>2021-12-29T04:53:28.888Z</published>
    <updated>2021-12-30T07:55:03.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>正如学编程语言时首个程序是<code>Hello World!</code>一样，本blog亦是如此。</p><p>该网站旨在分享一些生活的点滴及秋招的经历。最初是在微信公众号分享，奈何修改、发表过于繁琐。后来尝试过csdn，但一些不可描述的原因又将我劝退，最终决定自己搭建网站。</p><h1 id="残局"><a href="#残局" class="headerlink" title="残局"></a>残局</h1><p>endgame,残局。</p><p>csgo可谓是电子竞技中最精彩的赛事之一，他的精彩就表现在残局众多。残局，是一场比赛中最精彩、最充满期待同时也是有着最多遗憾的时刻。精彩在会有一个力挽狂澜、扭转乾坤的人出现；遗憾在纵使他的某次发挥再流传千古，可终究改变不了逆局。</p><span id="more"></span><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>钱都花了，也该有点相应的规划。预想着在本网站发布一些算法刷题的经历、八股、面经以及将来实习、工作的经历，还有一些日常生活中的点滴（许久没学习的时候，水个内容）。当然了，还有另外一种可能——几天之后，<strong style="color:#e67c86;">删库跑路</strong>。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>奈何，本人才疏学浅，能力有限再加上语言表达能力不是很好，文章中会有些地方表达欠缺难以理解，甚至与事实相悖。遇到这种情况时，还望您能轻点骂，骂完能帮忙指出错误，避免我这一己之见误导了他人。网站里，留下了我的<a href="mailto:lyong000919@163.com">邮箱</a>及<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=1992018857&website=www.oicqzone.com">QQ</a>，如果您在阅读时有疑问、发现了错误又或者觉得这个人写的还可以，想交个朋友，欢迎联系我。</p><hr><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>以下，进行一些markdown语法的测试：</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for_each example</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>     <span class="comment">// std::cout</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>    <span class="comment">// std::for_each</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span>       <span class="comment">// std::vector</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myfunction</span> <span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;  <span class="comment">// function:</span></span><br><span class="line">  std::cout &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">myclass</span> &#123;</span>           <span class="comment">// function object type:</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operator</span><span class="params">()</span> <span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;std::cout &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i;&#125;</span><br><span class="line">&#125; myobject;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  std::vector&lt;<span class="keyword">int</span>&gt; myvector;</span><br><span class="line">  myvector.<span class="built_in">push_back</span>(<span class="number">10</span>);</span><br><span class="line">  myvector.<span class="built_in">push_back</span>(<span class="number">20</span>);</span><br><span class="line">  myvector.<span class="built_in">push_back</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;myvector contains:&quot;</span>;</span><br><span class="line">  for_each (myvector.<span class="built_in">begin</span>(), myvector.<span class="built_in">end</span>(), myfunction);</span><br><span class="line">  std::cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// or:</span></span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;myvector contains:&quot;</span>;</span><br><span class="line">  for_each (myvector.<span class="built_in">begin</span>(), myvector.<span class="built_in">end</span>(), myobject);</span><br><span class="line">  std::cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果</span></span><br><span class="line"><span class="comment">myvector contains: 10 20 30</span></span><br><span class="line"><span class="comment">myvector contains: 10 20 30</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a><em>公式</em></h2><p>$$<br>H_k=M\left(A,H_{k-1};W_{k-1} \right)=\sigma \left( \hat AH_{k-1}W_{k-1} \right)W_{k-1}\in{\mathbb{\mathbb{R} } }^{v_{k-1}\times v_k}<br>$$</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><u>表格</u></h2><table><thead><tr><th>a</th><th>b</th><th>c</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>2</td></tr></tbody></table><hr><p>「123」</p><p><del>456</del></p><ul><li><input disabled="" type="checkbox"> 789</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;正如学编程语言时首个程序是&lt;code&gt;Hello World!&lt;/code&gt;一样，本blog亦是如此。&lt;/p&gt;
&lt;p&gt;该网站旨在分享一些生活的点滴及秋招的经历。最初是在微信公众号分享，奈何修改、发表过于繁琐。后来尝试过csdn，但一些不可描述的原因又将我劝退，最终决定自己搭建网站。&lt;/p&gt;
&lt;h1 id=&quot;残局&quot;&gt;&lt;a href=&quot;#残局&quot; class=&quot;headerlink&quot; title=&quot;残局&quot;&gt;&lt;/a&gt;残局&lt;/h1&gt;&lt;p&gt;endgame,残局。&lt;/p&gt;
&lt;p&gt;csgo可谓是电子竞技中最精彩的赛事之一，他的精彩就表现在残局众多。残局，是一场比赛中最精彩、最充满期待同时也是有着最多遗憾的时刻。精彩在会有一个力挽狂澜、扭转乾坤的人出现；遗憾在纵使他的某次发挥再流传千古，可终究改变不了逆局。&lt;/p&gt;</summary>
    
    
    
    
    <category term="关于我" scheme="http://example.com/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
  </entry>
  
</feed>
